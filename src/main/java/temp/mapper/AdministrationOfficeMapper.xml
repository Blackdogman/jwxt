<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="temp.dao.AdministrationOfficeMapper">
  <resultMap id="BaseResultMap" type="temp.model.AdministrationOffice">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="worker_id" jdbcType="VARCHAR" property="workerId" />
    <result column="worker_name" jdbcType="VARCHAR" property="workerName" />
    <result column="worker_birthday" jdbcType="DATE" property="workerBirthday" />
    <result column="worker_sex" jdbcType="INTEGER" property="workerSex" />
    <result column="worker_address" jdbcType="VARCHAR" property="workerAddress" />
    <result column="worker_nationality" jdbcType="VARCHAR" property="workerNationality" />
    <result column="worker_phone" jdbcType="VARCHAR" property="workerPhone" />
    <result column="worker_status" jdbcType="INTEGER" property="workerStatus" />
    <result column="worker_citizen_id" jdbcType="VARCHAR" property="workerCitizenId" />
    <result column="worker_political_status" jdbcType="INTEGER" property="workerPoliticalStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, worker_id, worker_name, worker_birthday, worker_sex, worker_address, worker_nationality, 
    worker_phone, worker_status, worker_citizen_id, worker_political_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from administration_office
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from administration_office
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="temp.model.AdministrationOffice">
    insert into administration_office (id, worker_id, worker_name, 
      worker_birthday, worker_sex, worker_address, 
      worker_nationality, worker_phone, worker_status, 
      worker_citizen_id, worker_political_status)
    values (#{id,jdbcType=VARCHAR}, #{workerId,jdbcType=VARCHAR}, #{workerName,jdbcType=VARCHAR}, 
      #{workerBirthday,jdbcType=DATE}, #{workerSex,jdbcType=INTEGER}, #{workerAddress,jdbcType=VARCHAR}, 
      #{workerNationality,jdbcType=VARCHAR}, #{workerPhone,jdbcType=VARCHAR}, #{workerStatus,jdbcType=INTEGER}, 
      #{workerCitizenId,jdbcType=VARCHAR}, #{workerPoliticalStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="temp.model.AdministrationOffice">
    insert into administration_office
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="workerId != null">
        worker_id,
      </if>
      <if test="workerName != null">
        worker_name,
      </if>
      <if test="workerBirthday != null">
        worker_birthday,
      </if>
      <if test="workerSex != null">
        worker_sex,
      </if>
      <if test="workerAddress != null">
        worker_address,
      </if>
      <if test="workerNationality != null">
        worker_nationality,
      </if>
      <if test="workerPhone != null">
        worker_phone,
      </if>
      <if test="workerStatus != null">
        worker_status,
      </if>
      <if test="workerCitizenId != null">
        worker_citizen_id,
      </if>
      <if test="workerPoliticalStatus != null">
        worker_political_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="workerId != null">
        #{workerId,jdbcType=VARCHAR},
      </if>
      <if test="workerName != null">
        #{workerName,jdbcType=VARCHAR},
      </if>
      <if test="workerBirthday != null">
        #{workerBirthday,jdbcType=DATE},
      </if>
      <if test="workerSex != null">
        #{workerSex,jdbcType=INTEGER},
      </if>
      <if test="workerAddress != null">
        #{workerAddress,jdbcType=VARCHAR},
      </if>
      <if test="workerNationality != null">
        #{workerNationality,jdbcType=VARCHAR},
      </if>
      <if test="workerPhone != null">
        #{workerPhone,jdbcType=VARCHAR},
      </if>
      <if test="workerStatus != null">
        #{workerStatus,jdbcType=INTEGER},
      </if>
      <if test="workerCitizenId != null">
        #{workerCitizenId,jdbcType=VARCHAR},
      </if>
      <if test="workerPoliticalStatus != null">
        #{workerPoliticalStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="temp.model.AdministrationOffice">
    update administration_office
    <set>
      <if test="workerId != null">
        worker_id = #{workerId,jdbcType=VARCHAR},
      </if>
      <if test="workerName != null">
        worker_name = #{workerName,jdbcType=VARCHAR},
      </if>
      <if test="workerBirthday != null">
        worker_birthday = #{workerBirthday,jdbcType=DATE},
      </if>
      <if test="workerSex != null">
        worker_sex = #{workerSex,jdbcType=INTEGER},
      </if>
      <if test="workerAddress != null">
        worker_address = #{workerAddress,jdbcType=VARCHAR},
      </if>
      <if test="workerNationality != null">
        worker_nationality = #{workerNationality,jdbcType=VARCHAR},
      </if>
      <if test="workerPhone != null">
        worker_phone = #{workerPhone,jdbcType=VARCHAR},
      </if>
      <if test="workerStatus != null">
        worker_status = #{workerStatus,jdbcType=INTEGER},
      </if>
      <if test="workerCitizenId != null">
        worker_citizen_id = #{workerCitizenId,jdbcType=VARCHAR},
      </if>
      <if test="workerPoliticalStatus != null">
        worker_political_status = #{workerPoliticalStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="temp.model.AdministrationOffice">
    update administration_office
    set worker_id = #{workerId,jdbcType=VARCHAR},
      worker_name = #{workerName,jdbcType=VARCHAR},
      worker_birthday = #{workerBirthday,jdbcType=DATE},
      worker_sex = #{workerSex,jdbcType=INTEGER},
      worker_address = #{workerAddress,jdbcType=VARCHAR},
      worker_nationality = #{workerNationality,jdbcType=VARCHAR},
      worker_phone = #{workerPhone,jdbcType=VARCHAR},
      worker_status = #{workerStatus,jdbcType=INTEGER},
      worker_citizen_id = #{workerCitizenId,jdbcType=VARCHAR},
      worker_political_status = #{workerPoliticalStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>